{"version":3,"sources":["constants/index.ts","containers/App/useBoard.ts","containers/App/App.tsx","i18n/I18nProvider.tsx","reportWebVitals.ts","index.tsx"],"names":["PLURALS","useBoard","useState","endGame","setEndGame","board","setBoard","minesCount","setMinesCount","mines","arr","c","x","Math","floor","random","y","some","p","push","length","setMines","createBoard","row","tile","key","status","mine","content","flat","setStatusHandler","value","i","findIndex","t","boardState","newState","map","o","idx","stateBoard","markedMines","filter","setMinesLeft","setContentHandler","nearTiles","tiles","xOffset","yOffset","find","useEffect","handleLeftClick","neighborTiles","hasMinesTiles","forEach","setTimeout","n","toString","reveal","handleRightClick","e","preventDefault","App","className","role","onClick","style","Number","onContextMenu","I18nProvider","children","messages","useMemo","ruMessages","locale","memo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7524638f.chunk.js","sourcesContent":["export const BOARD_SIZE = 10;\nexport const NUMBER_OF_MINES = 10;\n\nexport const PLURALS = ['zero', 'one', 'two', 'three', 'four', 'five', 'six'];\n","import { MouseEvent, useEffect, useState } from 'react';\nimport { BOARD_SIZE, NUMBER_OF_MINES } from '../../constants';\n\nimport { Coords, GameStatus, Status, Tile } from './types';\n\ntype ReturnType = {\n  board: Tile[];\n  createBoard: () => void;\n  endGame: GameStatus;\n  handleLeftClick: (tile: Tile) => void;\n  handleRightClick: (e: MouseEvent<HTMLDivElement>, tile: Tile) => void;\n  minesCount: number;\n};\n\nconst useBoard = (): ReturnType => {\n  const [endGame, setEndGame] = useState<GameStatus>(false);\n  const [board, setBoard] = useState<Tile[]>([]);\n  const [minesCount, setMinesCount] = useState(NUMBER_OF_MINES);\n\n  const setMines = () => {\n    const arr = [] as Coords[];\n\n    while (arr.length < NUMBER_OF_MINES) {\n      const c = {\n        x: Math.floor(Math.random() * BOARD_SIZE),\n        y: Math.floor(Math.random() * BOARD_SIZE),\n      } as Coords;\n\n      if (!arr.some((p) => p.x === c.x && p.y === c.y)) {\n        arr.push(c);\n      }\n    }\n\n    return arr;\n  };\n\n  const mines = setMines();\n\n  const createBoard = () => {\n    const arr = [];\n\n    for (let x = 0; x < BOARD_SIZE; x += 1) {\n      const row = [];\n\n      for (let y = 0; y < BOARD_SIZE; y += 1) {\n        const tile = {\n          x,\n          y,\n          key: `${x}${y}`,\n          status: 'hidden',\n          mine: mines.some((p) => p.x === x && p.y === y),\n          content: '',\n        } as Tile;\n\n        row.push(tile);\n      }\n\n      arr.push(row);\n    }\n\n    setBoard(arr.flat());\n    setMinesCount(NUMBER_OF_MINES);\n    setEndGame(false);\n  };\n\n  const setMinesLeft = (stateBoard: Tile[]) => {\n    const markedMines = stateBoard.filter(({ status }) => status === 'marked')\n      .length;\n\n    setMinesCount(NUMBER_OF_MINES - markedMines);\n  };\n\n  const checkHiddenTiles = (stateBoard: Tile[]) =>\n    !!stateBoard.filter((t) => t.status === 'hidden').length;\n\n  const setStatusHandler = (tile: Tile, value: Status) => {\n    const i = board.findIndex((t) => t.key === tile.key);\n\n    setBoard((boardState): Tile[] => {\n      const newState = boardState.map(\n        (o, idx): Tile => {\n          if (idx === i) {\n            return {\n              ...o,\n              status: value,\n            };\n          }\n\n          return o;\n        },\n      );\n\n      setMinesLeft(newState);\n\n      if (!checkHiddenTiles(newState)) {\n        setEndGame('win');\n      }\n\n      return newState;\n    });\n  };\n\n  const setContentHandler = (tile: Tile, value: string) => {\n    const i = board.findIndex((t) => t.key === tile.key);\n\n    setBoard((boardState): Tile[] =>\n      boardState.map(\n        (o, idx): Tile => {\n          if (idx === i) {\n            return {\n              ...o,\n              content: value,\n            };\n          }\n\n          return o;\n        },\n      ),\n    );\n  };\n\n  const nearTiles = ({ x, y, key }: Tile) => {\n    const tiles = [];\n\n    for (let xOffset = -1; xOffset <= 1; xOffset += 1) {\n      for (let yOffset = -1; yOffset <= 1; yOffset += 1) {\n        const tile = board.find(\n          (t) => t.x === x + xOffset && t.y === y + yOffset,\n        );\n\n        if (tile) {\n          tiles.push(tile);\n        }\n      }\n    }\n\n    return tiles.filter((t) => t.key !== key);\n  };\n\n  const reveal = (tile: Tile) => {\n    const neighborTiles = nearTiles(tile);\n    const hasMinesTiles = neighborTiles.filter((n) => n.mine);\n\n    if (tile.status !== 'hidden') {\n      return;\n    }\n\n    setStatusHandler(tile, 'number');\n\n    if (hasMinesTiles.length !== 0) {\n      setContentHandler(tile, hasMinesTiles.length.toString());\n    }\n  };\n\n  const handleLeftClick = (tile: Tile) => {\n    const neighborTiles = nearTiles(tile);\n    const hasMinesTiles = neighborTiles.filter((t) => t.mine);\n\n    if (endGame) {\n      return;\n    }\n\n    if (tile.status !== 'hidden') {\n      return;\n    }\n\n    if (tile.mine) {\n      board.forEach((t) => {\n        if (t.mine) {\n          setStatusHandler(t, 'mine');\n        }\n      });\n      setEndGame(true);\n\n      return;\n    }\n\n    setStatusHandler(tile, 'number');\n\n    if (hasMinesTiles.length === 0) {\n      // Next line looks like piece of shit\n      neighborTiles.forEach((t, i) => setTimeout(() => reveal(t), i));\n    } else {\n      setContentHandler(tile, hasMinesTiles.length.toString());\n    }\n  };\n\n  const handleRightClick = (e: MouseEvent<HTMLDivElement>, tile: Tile) => {\n    e.preventDefault();\n\n    if (endGame) {\n      return;\n    }\n\n    if (tile.status !== 'hidden' && tile.status !== 'marked') {\n      return;\n    }\n\n    if (tile.status === 'marked') {\n      setStatusHandler(tile, 'hidden');\n    } else {\n      setStatusHandler(tile, 'marked');\n    }\n  };\n\n  useEffect(() => {\n    createBoard();\n  }, []);\n\n  return {\n    board,\n    createBoard,\n    endGame,\n    handleLeftClick,\n    handleRightClick,\n    minesCount,\n  };\n};\n\nexport default useBoard;\n","import React from 'react';\nimport {\n  FaBomb,\n  FaFlag,\n  FaRegMeh,\n  FaRegSadCry,\n  FaRegSmileBeam,\n} from 'react-icons/fa';\n\nimport { BOARD_SIZE, PLURALS } from '../../constants';\n\nimport useBoard from './useBoard';\n\nimport './App.scss';\n\nconst App: React.FC = () => {\n  const {\n    board,\n    createBoard,\n    endGame,\n    handleLeftClick,\n    handleRightClick,\n    minesCount,\n  } = useBoard();\n\n  return (\n    <div className=\"App\">\n      <div className=\"Status\">\n        <div className=\"Counter\">{minesCount}</div>\n        <div className=\"GameButton\">\n          {!endGame ? (\n            <span className=\"Default\" role=\"presentation\" onClick={createBoard}>\n              <FaRegMeh />\n            </span>\n          ) : (\n            <>\n              {endGame === 'win' ? (\n                <span className=\"Win\" role=\"presentation\" onClick={createBoard}>\n                  <FaRegSmileBeam />\n                </span>\n              ) : (\n                <span\n                  className=\"Lose\"\n                  role=\"presentation\"\n                  onClick={createBoard}\n                >\n                  <FaRegSadCry />\n                </span>\n              )}\n            </>\n          )}\n        </div>\n        <div className=\"Counter\">100</div>\n      </div>\n      <div\n        className=\"Board\"\n        style={{ '--size': BOARD_SIZE } as React.CSSProperties}\n      >\n        {board.map((tile) => (\n          <div\n            key={tile.key}\n            role=\"presentation\"\n            className={`${tile.status} ${PLURALS[Number(tile.content)]}`}\n            onClick={() => handleLeftClick(tile)}\n            onContextMenu={(e) => handleRightClick(e, tile)}\n          >\n            {tile.status !== 'hidden' && (\n              <span>\n                {tile.status === 'number' ? (\n                  tile.content\n                ) : (\n                  <span>\n                    {tile.status === 'marked' ? <FaFlag /> : <FaBomb />}{' '}\n                  </span>\n                )}\n              </span>\n            )}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React, { ReactElement, ReactNode, memo, useMemo } from 'react';\nimport { IntlProvider } from 'react-intl';\n\nimport ruMessages from './translations/ru.json';\n\ninterface Provider {\n  children: ReactNode;\n}\n\nconst I18nProvider = ({ children }: Provider): ReactElement => {\n  const messages = useMemo(() => ruMessages, []);\n\n  return (\n    <IntlProvider locale=\"ru\" messages={messages}>\n      {children}\n    </IntlProvider>\n  );\n};\n\nexport default memo(I18nProvider);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './containers/App/App';\n\nimport I18nProvider from './i18n/I18nProvider';\nimport reportWebVitals from './reportWebVitals';\n\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <I18nProvider>\n      <App />\n    </I18nProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n"],"sourceRoot":""}